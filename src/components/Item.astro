---
export interface Props {
  title: string;
  date: string;
  job: string;
  location: string;
  achievements: string[];
  svg: {
    viewBox: string;
    path: string;
  };
}

const { title, date, job, location, achievements, svg } = Astro.props;
---

<div
  class="wrapper grid grid-cols-1 p-5 gap-2 bg-white rounded-md shadow-sm duration-200 transition-all hover:shadow-md sm:grid-cols-3"
>
  <div class="col-span-1">
    <h3 class="flex justify-between align-bottom font-black sm:flex-col">
      <span class="text-2xl">{title}</span>
      <span class="text-base leading-9 sm:leading-default">{date}</span>
    </h3>
    <svg
      class="absolute top-11 left-4 w-36"
      xmlns="http://www.w3.org/2000/svg"
      viewBox={svg.viewBox}
    >
      <path
        class="line transition-all duration-300 ease-in-out"
        d={svg.path}
        stroke="#363af8"
        stroke-width="15"
        fill="none"></path>
    </svg>
    <h4
      class="flex justify-between text-muted text-opacity-70 font-black sm:flex-col"
    >
      <span>{job}</span>
      <span>{location}</span>
    </h4>
  </div>
  <ul class="col-span-2 flex flex-col gap-2">
    {
      achievements.map((achievement, index) => (
        <li class="flex gap-2 text-sm">
          <img
            class="disc w-4 h-4 mt-px"
            src={`/assets/dot${index + 1}.png`}
            alt=""
          />{" "}
          <p>{achievement}</p>
        </li>
      ))
    }
  </ul>
  <style></style>
</div>

<style>
  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    99% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  path {
    stroke-linecap: butt;
    animation: fade-in 1s forwards;
  }

  .wrapper:hover {
    transform: scale(1.02);
  }

  .wrapper:hover path {
    stroke-dashoffset: 0 !important;
  }
</style>

<script>
  const paths = document.querySelectorAll("path.line");

  paths.forEach((path: SVGPathElement) => {
    const length = path.getTotalLength();
    path.style.strokeDasharray = length.toString();
    path.style.strokeDashoffset = length.toString();
  });
</script>
